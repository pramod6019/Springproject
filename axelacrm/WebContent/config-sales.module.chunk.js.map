{"version":3,"sources":["d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/sales/configure-sales/config-sales.component.html","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/sales/configure-sales/config-sales.component.ts","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/sales/configure-sales/config-sales.module.ts"],"names":[],"mappings":"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","file":"config-sales.module.chunk.js","sourcesContent":["module.exports = \"\\t<toast></toast>\\r\\n\\t<div class=\\\"m-subheader mr-auto\\\" >\\r\\n        <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n\\t\\t\\t\\tConfigure Sales\\r\\n\\t\\t\\t</h3>\\r\\n         <ul class=\\\"m-subheader__breadcrumbs m-nav m-nav--inline\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tHome\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/manager\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tBusiness Manager\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tSales\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/configure-sales\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tConfigure Sales:\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\t\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__head col-md-12 btn-row\\\" >\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head-caption\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t<h2 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\t\\tConfigure Sales\\r\\n\\t\\t\\t\\t\\t</h2>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n    \\t<form (ngSubmit)=\\\"onSubmit()\\\" class=\\\"m-form m-form--fit m-form--label-align-right\\\"\\tid=\\\"m_form_1\\\"    [formGroup]=\\\"configureSalesForm\\\">\\r\\n     <div class=\\\"m-portlet__body\\\">\\r\\n       <table class=\\\"container\\\">\\r\\n\\t<tbody>\\r\\n       <tr>\\r\\n\\t\\t <td>\\r\\n\\t\\t    <label>Enable Leads:</label> \\r\\n\\t\\t    <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesLeads)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesLeads'})\\\" formControlName=\\\"configSalesLeads\\\"></mat-checkbox>\\r\\n\\t\\t </td>\\r\\n\\t\\t  <td>\\r\\n\\t\\t      <label>Enable Quotes:</label> \\r\\n\\t          <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesQuote)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesQuote'})\\\" formControlName=\\\"configSalesQuote\\\"></mat-checkbox>\\r\\n\\t         </td>\\r\\n\\t      <td>\\r\\n\\t\\t    <label>Enable campaign:</label> \\r\\n\\t\\t    <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesCampaign)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesCampaign'})\\\" formControlName=\\\"configSalesCampaign\\\"></mat-checkbox>\\r\\n\\t     </td>\\t\\r\\n\\t\\t  \\r\\n\\t\\t</tr>\\r\\n\\t</tbody> \\r\\n\\r\\n       <tbody>\\r\\n        <tr>\\r\\n            <td>\\r\\n\\t\\t      <label>Enable Invoice:</label> \\r\\n\\t\\t      <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesInvoice)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesInvoice'})\\\" formControlName=\\\"configSalesInvoice\\\"></mat-checkbox>\\t\\r\\n\\t\\t </td>\\r\\n          <td>\\r\\n\\t\\t   <label>Quote Ref No.:</label> \\r\\n\\t\\t   <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesQuoteRefno)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesQuoteRefno'})\\\" formControlName=\\\"configSalesQuoteRefno\\\"></mat-checkbox>\\t\\r\\n\\t\\t </td>\\r\\n         <td>\\r\\n\\t\\t    <label>Opportunity Ref No.</label> \\r\\n\\t\\t    <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesOpprRefno)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesOpprRefno'})\\\" formControlName=\\\"configSalesOpprRefno\\\"></mat-checkbox>\\t\\r\\n\\t\\t</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n         \\r\\n         \\r\\n         <tbody>\\r\\n          <tr>\\r\\n           <td>\\r\\n\\t\\t      <label>Enable Target:</label> \\r\\n\\t\\t       <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesTarget)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesTarget'})\\\" formControlName=\\\"configSalesTarget\\\"></mat-checkbox>\\r\\n\\t\\t  </td>\\r\\n         <td>\\r\\n\\t\\t     <label>Enable Teams:</label> \\r\\n\\t\\t     <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesTeams)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesTeams'})\\\" formControlName=\\\"configSalesTeams\\\"></mat-checkbox>\\t\\r\\n\\t\\t  </td>\\r\\n        <td>\\r\\n\\t\\t  <label>Receipt Ref No.:</label> \\r\\n\\t\\t  <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesReceiptRefno)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesReceiptRefno'})\\\" formControlName=\\\"configSalesReceiptRefno\\\"></mat-checkbox>\\t\\r\\n        </td>\\r\\n        </tr>\\r\\n       </tbody>\\r\\n        \\r\\n        <tbody>\\r\\n         <tr>\\r\\n         <td>\\r\\n\\t\\t     <label>Lead Ref No.</label> \\r\\n\\t\\t     <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesLeadRefno)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesLeadRefno'})\\\" formControlName=\\\"configSalesLeadRefno\\\"></mat-checkbox>\\t\\r\\n\\t\\t </td>\\t\\r\\n          <td>\\r\\n\\t\\t      <label>Enable Teams:</label> \\r\\n\\t\\t      <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesQuoteForSo)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesQuoteForSo'})\\\" formControlName=\\\"configSalesQuoteForSo\\\"></mat-checkbox>\\t\\r\\n\\t\\t  </td>\\r\\n         <td>\\r\\n\\t\\t     <label>Enable Balance:</label> \\r\\n\\t\\t     <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesBalancepayments)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesBalancepayments'})\\\" formControlName=\\\"configSalesBalancepayments\\\"></mat-checkbox>\\t\\r\\n         </td>\\r\\n          </tr>\\r\\n      </tbody>\\r\\n      \\r\\n        \\r\\n       <tbody>\\r\\n        <tr>\\r\\n        <td>\\r\\n\\t\\t   <label>Invoice Ref No.</label> \\r\\n\\t\\t   <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesInvoiceRefno)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesInvoiceRefno'})\\\" formControlName=\\\"configSalesInvoiceRefno\\\"></mat-checkbox>\\t\\r\\n\\t\\t</td>\\r\\n        <td>\\r\\n\\t\\t      <label>Opportunity for Quote:</label> \\r\\n\\t\\t      <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesOpprForQuote)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesOpprForQuote'})\\\" formControlName=\\\"configSalesOpprForQuote\\\"></mat-checkbox>\\t\\r\\n\\t\\t   </td>\\r\\n         <td>\\r\\n\\t\\t    <label>Model Mandatory for opportunity :</label> \\r\\n\\t\\t    <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesOpprModel)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesOpprModel'})\\\" formControlName=\\\"configSalesOpprModel\\\"></mat-checkbox>\\t\\r\\n\\t\\t </td>\\t\\r\\n        </tr>\\r\\n   </tbody>\\r\\n   \\r\\n   <tbody>\\r\\n     <tr>\\r\\n         <td>\\r\\n\\t\\t   <label>Enable Sales Order:</label> \\r\\n\\t\\t   <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesSalesorder)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesSalesorder'})\\\" formControlName=\\\"configSalesSalesorder\\\"></mat-checkbox>\\t\\r\\n\\t\\t </td>\\r\\n         <td>\\r\\n\\t\\t     <label>Lead for Opportunity:</label> \\r\\n\\t\\t     <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesLeadForOppr)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesLeadForOppr'})\\\" formControlName=\\\"configSalesLeadForOppr\\\"></mat-checkbox>\\t\\r\\n\\t\\t </td>\\t\\r\\n         <td>\\r\\n\\t\\t    <label>Item Mandatory for opportunity:</label> \\r\\n\\t\\t    <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesOpprItem)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesOpprItem'})\\\" formControlName=\\\"configSalesOpprItem\\\"></mat-checkbox>\\r\\n\\t\\t </td>\\t\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    \\r\\n <tbody>\\r\\n \\t<tr>\\r\\n \\t   <td>\\r\\n\\t\\t   <label>Enable opportunity</label> \\r\\n\\t\\t   <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesOppr)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesOppr'})\\\" formControlName=\\\"configSalesOppr\\\"></mat-checkbox>\\t\\r\\n\\t\\t </td>\\r\\n \\t\\t<td>\\r\\n\\t\\t   <label>Sales Order Ref No.:</label> \\r\\n\\t\\t   <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesSoRefno)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesSoRefno'})\\\" formControlName=\\\"configSalesSoRefno\\\"></mat-checkbox>\\r\\n\\t\\t</td>\\r\\n\\t   <td>\\r\\n\\t\\t  <label>Enable source of Enquiry:</label> \\r\\n\\t\\t  <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesSoe)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesSoe'})\\\" formControlName=\\\"configSalesSoe\\\"></mat-checkbox>\\t\\r\\n       </td>\\r\\n\\t  </tr>\\r\\n\\t  <tr>\\r\\n\\t    <td>\\r\\n\\t\\t  <label>Enable Source of Bussiness:</label> \\r\\n\\t\\t  <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesSob)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesSob'})\\\" formControlName=\\\"configSalesSob\\\"></mat-checkbox>\\t\\r\\n\\t   </td>\\r\\n\\t  </tr>\\r\\n </tbody>\\r\\n  </table>  \\r\\n         \\r\\n      <div class =\\\"row\\\">\\r\\n       <div class='col-md-6'>\\r\\n            <mat-form-field>\\r\\n            <input required matInput placeholder=\\\"Opportunity Name\\\"  [(ngModel)]=\\\"configuresales.configSalesOpprName\\\" formControlName=\\\"configSalesOpprName\\\" maxlength=\\\"255\\\">\\r\\n             <mat-error *ngIf=\\\"configSalesOpprName.hasError('required')\\\"> Enter Opportunity Name </mat-error>\\r\\n           </mat-form-field>\\r\\n\\t\\t</div>\\r\\n      \\r\\n      \\r\\n      <div class='col-md-6'>\\r\\n          <mat-form-field>\\r\\n            <input  matInput placeholder=\\\"Enquiry Domain\\\"  [(ngModel)]=\\\"configuresales.configSalesEnquiryDomain\\\" formControlName=\\\"configSalesEnquiryDomain\\\" maxlength=\\\"255\\\">\\r\\n          </mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n      \\r\\n      <div class =\\\"row\\\">\\r\\n       <div class='col-md-6'>\\r\\n          <mat-form-field>\\r\\n            <input required matInput placeholder=\\\"Quote Prefix\\\"  [(ngModel)]=\\\"configuresales.configQuotePrefix\\\" formControlName=\\\"configQuotePrefix\\\" maxlength=\\\"255\\\">\\r\\n             <mat-error *ngIf=\\\"configQuotePrefix.hasError('required')\\\"> Enter Quote Prefix </mat-error>\\r\\n          </mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t \\r\\n        <div class='col-md-6'>\\r\\n          <mat-form-field>\\r\\n            <input required matInput placeholder=\\\"SO Prefix\\\"  [(ngModel)]=\\\"configuresales.configSoPrefix\\\" formControlName=\\\"configSoPrefix\\\" maxlength=\\\"255\\\">\\r\\n             <mat-error *ngIf=\\\"configSoPrefix.hasError('required')\\\"> Enter SO Prefix </mat-error>\\r\\n          </mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n        \\r\\n        <div class =\\\"row\\\">\\r\\n         <div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea matInput placeholder=\\\"Quote Description\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configQuoteDesc\\\" formControlName=\\\"configQuoteDesc\\\"    maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t   <mat-error *ngIf=\\\"configQuoteDesc.hasError('required')\\\"> Enter Script </mat-error>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t </div>\\r\\n     \\r\\n       <div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea   matInput placeholder=\\\"Quote Terms & Conditions:\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configQuoteTerms\\\" formControlName=\\\"configQuoteTerms\\\"  maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n     </div>\\r\\n     \\r\\n      <div class =\\\"row\\\">\\r\\n      <div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea  matInput placeholder=\\\"Sales Order Description:\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configSoDesc\\\" formControlName=\\\"configSoDesc\\\"    maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n      \\r\\n       \\t<div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea  matInput placeholder=\\\"Sales Order Terms & Conditions:\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configSoTerms\\\" formControlName=\\\"configSoTerms\\\"    maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t   <mat-error *ngIf=\\\"configSoTerms.hasError('required')\\\"> Enter Script </mat-error>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n       <br>\\r\\n       \\r\\n       <h4 align =\\\"center\\\">Automated Tasks:</h4>\\r\\n       <table class=\\\"table table-hover table-bordered\\\" style=\\\"width:80%\\\" align=\\\"center\\\">\\r\\n        <thead class =\\\"bg-primary\\\">\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>Task Type</th>\\r\\n\\t\\t\\t\\t\\t<th>Send Email</th>\\r\\n\\t\\t\\t\\t\\t<th>Format Email</th>\\r\\n\\t\\t\\t\\t\\t<th>Send SMS</th>\\r\\n\\t\\t\\t\\t\\t<th>Format SMS</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr>\\r\\n            <td align=\\\"left\\\">Sales Order:</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"><mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSoEmailEnable)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSoEmailEnable'})\\\" formControlName=\\\"configSoEmailEnable\\\"></mat-checkbox></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"><mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSoSmsEnable)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSoSmsEnable'})\\\" formControlName=\\\"configSoSmsEnable\\\"></mat-checkbox></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\t\\t  </tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td align=\\\"left\\\">Sales Order for Executive:</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t</tbody>\\r\\n\\t  \\t</table>\\r\\n\\t\\t\\r\\n        \\r\\n         <div class=\\\"col-md-12 btn-row\\\">\\r\\n\\t\\t  <button mat-button [disabled]=\\\"false\\\" class=\\\"btn btn-primary\\\"> Update </button> \\r\\n\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n    </form>\\r\\n \\t</div>\\r\\n\\t\\t\\r\\n\\t\\t\\t\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/sales/configure-sales/config-sales.component.html\n// module id = ../../../../../src/app/theme/pages/portal/manager/sales/configure-sales/config-sales.component.html\n// module chunks = config-sales.module","import { Component, OnInit, ViewEncapsulation, AfterViewInit, ElementRef, ViewChild, HostBinding} from '@angular/core';\r\nimport { Helpers } from '../../../../../../helpers';\r\nimport { ScriptLoaderService } from '../../../../../../_services/script-loader.service';\r\nimport { ROUND_ANTICLOCK_ANIMATION }   from '../../../../../../animations/round-anticlock.animation';\r\nimport { FLY_IN_OUT_ANIMATION }   from '../../../../../../animations/fly-in-out.animation';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { MatInputModule, MatNativeDateModule, MatSelectModule, MatSort, PageEvent} from '@angular/material';\r\nimport { Router, Event, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {ListComponent, SafeHtmlPipe} from '../../../../list/list.component'\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { FormControl, Validators, FormGroup, ValidationErrors } from '@angular/forms';\r\nimport { GlobalValidate } from '../../../../../../_services/validate.service';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/observable/merge'; \r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport 'rxjs/add/operator/filter' ;\r\nimport { ToastComponent } from '../../../../../layouts/toast-notification/toast.component';\r\n\r\n\r\n@Component({\r\n    selector: \".m-grid__item.m-grid__item--fluid.m-wrapper\",\r\n    templateUrl: \"./config-sales.component.html\",\r\n    encapsulation: ViewEncapsulation.None,\r\n\tanimations: [ \r\n    FLY_IN_OUT_ANIMATION,\r\n\t\tROUND_ANTICLOCK_ANIMATION\r\n  ],\r\n})\r\n\r\nexport class ConfigureSalesComponent    {\r\n    @HostBinding('@flyInOutTrigger') flyInOutTrigger = 'in';\r\n\t@ViewChild(ToastComponent) toast: ToastComponent;\r\n\t\r\n\t configureSalesForm: FormGroup;\r\n     bootstrapFromValues = [];\r\n\t status;\r\n\t configuresales= new configureSalesData();\r\n\t msg = [];\r\n \r\n   constructor(private globalValid: GlobalValidate, private http: HttpClient, private _router: Router, private route:ActivatedRoute) {\r\n\t   this.status = \"Update\";\r\n//\t\tthis.populateData();\r\n\t  \r\n   }\r\n\t \r\n\t ngOnInit() {\r\n\t\tthis.configureSalesForm = new FormGroup({\t\r\n\t\t\t'configSalesLeads' : new FormControl(''),\r\n\t\t\t'configSalesOppr' : new FormControl(''),\r\n\t\t\t'configSalesQuote' : new FormControl(''),\r\n\t\t\t'configSalesSalesorder' : new FormControl(''),\r\n\t\t\t'configSalesInvoice' : new FormControl(''),\r\n\t\t\t'configSalesBalancepayments' : new FormControl(''),\r\n\t\t\t'configSalesCampaign' : new FormControl(''),\r\n\t\t\t'configSalesTarget' : new FormControl(''),\r\n\t\t\t'configSalesTeams' : new FormControl(''),\r\n\t\t\t'configSalesLeadForOppr' : new FormControl(''),\r\n\t\t\t'configSalesOpprForQuote' : new FormControl(''),\r\n\t\t\t'configSalesQuoteForSo' : new FormControl(''),\r\n\t\t\t'configSalesLeadRefno' : new FormControl(''),\r\n\t\t\t'configSalesOpprRefno' : new FormControl(''),\r\n\t\t\t'configSalesOpprModel' : new FormControl(''),\r\n\t\t\t'configSalesOpprItem' : new FormControl(''),\r\n\t\t\t'configSalesOpprName' : new FormControl('', [ Validators.required]),\r\n\t\t\t'configSalesQuoteRefno' : new FormControl(''),\r\n\t\t\t'configSalesSoRefno' : new FormControl(''),\r\n\t\t\t'configSalesInvoiceRefno' :  new FormControl(''),\r\n\t\t\t'configSalesReceiptRefno' : new FormControl(''),\r\n\t\t\t'configSalesSoe' :  new FormControl(''),\r\n\t\t\t'configSalesSob' :  new FormControl(''),\r\n\t\t\t'configSalesEnquiryDomain' :  new FormControl(''),\r\n\t\t\t'configSalesEnquiryThankyouUrl' :  new FormControl(''),\r\n\t\t\t'configQuotePrefix' :  new FormControl('', [ Validators.required]),\r\n\t\t\t'configSoPrefix' : new FormControl('', [ Validators.required]),\r\n\t\t\t'configQuoteDesc' : new FormControl(''),\r\n\t\t\t'configQuoteTerms' :  new FormControl(''),\r\n\t\t\t'configSoDesc' :  new FormControl(''),\r\n\t\t\t'configSoTerms' :  new FormControl(''),\r\n\t\t\t'configSoEmailEnable' : new FormControl(''),\r\n\t\t\t'configSoSmsEnable' : new FormControl(''),\r\n\t\t});\r\n\t\t}\r\n\t \r\n\t   get configSalesLeads(){ return this.configureSalesForm.get('configSalesLeads')};\r\n\t   get configSalesOppr(){ return this.configureSalesForm.get('configSalesOppr')};\r\n\t   get configSalesQuote(){ return this.configureSalesForm.get('configSalesQuote')};\r\n\t   get configSalesSalesorder(){ return this.configureSalesForm.get('configSalesSalesorder')};\r\n\t   get configSalesInvoice(){ return this.configureSalesForm.get('configSalesInvoice')};\r\n\t   get configSalesBalancepayments(){ return this.configureSalesForm.get('configSalesBalancepayments')};\r\n\t   get configSalesCampaign(){ return this.configureSalesForm.get('configSalesCampaign')};\r\n\t   get configSalesTarget(){ return this.configureSalesForm.get('configSalesTarget')};\r\n\t   get configSalesTeams(){ return this.configureSalesForm.get('configSalesTeams')};\r\n\t   get configSalesLeadForOppr(){ return this.configureSalesForm.get('configSalesLeadForOppr')};\r\n\t   get configSalesOpprForQuote(){ return this.configureSalesForm.get('configSalesOpprForQuote')};\r\n\t   get configSalesQuoteForSo(){ return this.configureSalesForm.get('configSalesQuoteForSo')};\r\n\t   get configSalesLeadRefno(){ return this.configureSalesForm.get('configSalesLeadRefno')};\r\n\t   get configSalesOpprRefno(){ return this.configureSalesForm.get('configSalesOpprRefno')};\r\n\t   get configSalesOpprModel(){ return this.configureSalesForm.get('configSalesOpprModel')};\r\n  \t   get configSalesOpprItem(){ return this.configureSalesForm.get('configSalesOpprItem')};\r\n\t   get configSalesOpprName(){ return this.configureSalesForm.get('configSalesOpprName')};\r\n\t   get configSalesQuoteRefno(){ return this.configureSalesForm.get('configSalesQuoteRefno')};\r\n\t   get configSalesSoRefno(){ return this.configureSalesForm.get('configSalesSoRefno')};\r\n\t   get configSalesInvoiceRefno(){ return this.configureSalesForm.get('configSalesInvoiceRefno')};\r\n\t   get configSalesReceiptRefno(){ return this.configureSalesForm.get('configSalesReceiptRefno')};\r\n\t   get configSalesSoe(){ return this.configureSalesForm.get('configSalesSoe')};\r\n\t   get configSalesSob(){ return this.configureSalesForm.get('configSalesSob')};\r\n\t   get configSalesEnquiryDomain(){ return this.configureSalesForm.get('configSalesEnquiryDomain')};\r\n\t   get configSalesEnquiryThankyouUrl(){ return this.configureSalesForm.get('configSalesEnquiryThankyouUrl')};\r\n\t   get configQuotePrefix(){ return this.configureSalesForm.get('configQuotePrefix')};\r\n       get configSoPrefix(){ return this.configureSalesForm.get('configSoPrefix')};\r\n\t   get configQuoteDesc(){ return this.configureSalesForm.get('configQuoteDesc')};\r\n\t   get configQuoteTerms(){ return this.configureSalesForm.get('configQuoteTerms')};\r\n\t   get configSoTerms(){ return this.configureSalesForm.get('configSoTerms')};\r\n       get configSoEmailEnable(){ return this.configureSalesForm.get('configSoEmailEnable')};\r\n\t   get configSoSmsEnable(){ return this.configureSalesForm.get('configSoSmsEnable')};\r\n\t  \r\n\t \r\n//\t populateData(){\r\n//\t\t\t  \tconst headers = new HttpHeaders({'Content-Type':'application/json'});\r\n//\t\t\t  this.http.post<configureSalesData>(sessionStorage.getItem('requestUrl')+'/axelacrm/service/jobcard-data',\r\n//\t\t\t\t\t\t\t \t\t\tJSON.stringify({ jcId :this.jcId}),\r\n//\t\t\t\t\t\t\t\t\t{ headers, withCredentials: true }).subscribe(data =>{\r\n//\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.jobcard = data['populateData'][0];\r\n//\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t (err) => {\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"ERROR: \"+err);\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t });\r\n//\t }\r\n\r\n \t\r\n\t getCheckValues(temp:string){\r\n\t\treturn this.globalValid.getCheckValue(temp);\r\n\t }\r\n\t \r\n\t \tonSubmit() {\r\n\t\t\tconsole.log(this.configuresales);\r\n\t\t\tthis.bootstrapFromValues = $('#m_form_1').serializeArray();\r\n\t\t\tif(!this.configureSalesForm.invalid){\r\n\t\t\t  const headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\t\t\t\r\n\t\t\tthis.configuresales['requestType'] = 'update';\r\n//\t\t this.http.post(sessionStorage.getItem('requestUrl')+'/axelacrm/service/jobcard',\r\n//\t\t\t\t\t\t\t\t\tJSON.stringify(this.configuresales),\r\n//\t\t\t\t\t\t{ headers, withCredentials: true }).subscribe(data => {\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'] == undefined){\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['errormsg'];\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'].includes('Successfully')){\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='success';\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['successmsg'];\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n//\t\t\t  \t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n//\t\t\t  \t\t\t\t\t\t\t\t\t\t\tif(this.msg[0]!='Error'){\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.configureSalesForm.reset();\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t \r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\terr =>{\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=err['error'];\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n//\t\t \t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t  } \r\n\t}\r\n}\r\n\r\nexport class configureSalesData {\r\n\tconfigSalesLeads: string ;\r\n\tconfigSalesOppr: string ;\r\n\tconfigSalesQuote: string ;\r\n\tconfigSalesSalesorder: string ;\r\n\tconfigSalesInvoice: string ;\r\n\tconfigSalesBalancepayments: string ;\r\n\tconfigSalesCampaign: string ;\r\n\tconfigSalesTarget: string ;\r\n\tconfigSalesTeams: string ;\r\n\tconfigSalesLeadForOppr: string ;\r\n\tconfigSalesOpprForQuote: string ;\r\n  \r\n\tconfigSalesQuoteForSo: string ;\r\n\tconfigSalesLeadRefno: string ;\r\n\tconfigSalesOpprRefno: string ;\r\n\tconfigSalesOpprModel: string ;\r\n\tconfigSalesOpprItem: string ;\r\n\tconfigSalesOpprName: string ;\r\n\t\t\t\r\n\tconfigSalesQuoteRefno: string ;\r\n\tconfigSalesSoRefno: string ;\r\n\tconfigSalesInvoiceRefno: string ;\r\n\tconfigSalesReceiptRefno: string ;\r\n\tconfigSalesSoe: string ;\r\n\tconfigSalesSob: string ;\r\n\tconfigSalesEnquiryDomain: string ;\r\n\t\r\n    configSalesEnquiryThankyouUrl: string ;\r\n    configQuotePrefix: string ;\r\n    configSoPrefix: string ;\r\n    configQuoteDesc: string ;\r\n    configQuoteTerms: string ;\r\n    configSoDesc: string ;\r\n    configSoTerms: string ;\r\n    \r\n\tconfigSoEmailEnable: string ;\r\n\tconfigSoSmsEnable: string ;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/sales/configure-sales/config-sales.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ConfigureSalesComponent } from './config-sales.component';\r\nimport { LayoutModule } from '../../../../../layouts/layout.module';\r\nimport { DefaultComponent } from '../../../../default.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport { SmartSearchComponent } from '../../../../../layouts/smart-search/smart-search.component';\r\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\r\nimport {ListModule} from '../../../../list/list.module';\r\nimport {ToastModule} from '../../../../../layouts/toast-notification/toast.module';\r\nimport {\r\n\t  MatAutocompleteModule,\r\n\t  MatButtonModule,\r\n\t  MatButtonToggleModule,\r\n\t  MatCardModule,\r\n\t  MatCheckboxModule,\r\n\t  MatChipsModule,\r\n\t  MatDatepickerModule,\r\n\t  MatDialogModule,\r\n\t  MatExpansionModule,\r\n\t  MatGridListModule,\r\n\t  MatIconModule,\r\n\t  MatInputModule,\r\n\t  MatListModule,\r\n\t  MatMenuModule,\r\n\t  MatNativeDateModule,\r\n\t  MatPaginatorModule,\r\n\t  MatProgressBarModule,\r\n\t  MatProgressSpinnerModule,\r\n\t  MatRadioModule,\r\n\t  MatRippleModule,\r\n\t  MatSelectModule,\r\n\t  MatSidenavModule,\r\n\t  MatSliderModule,\r\n\t  MatSlideToggleModule,\r\n\t  MatSnackBarModule,\r\n\t  MatSortModule,\r\n\t  MatTableModule,\r\n\t  MatTabsModule,\r\n\t  MatToolbarModule,\r\n\t  MatTooltipModule,\r\n\t  MatStepperModule,\r\n\t} from '@angular/material';\r\n\t\r\nconst routes: Routes = [\r\n    {\r\n        \"path\": \"\",\r\n        \"component\": DefaultComponent,\r\n        \"children\": [\r\n            {\r\n                \"path\": \"\",\r\n                \"component\": ConfigureSalesComponent \r\n            }\r\n        ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, RouterModule.forChild(routes), LayoutModule, HttpClientModule,\r\n        FormsModule, ReactiveFormsModule, ListModule, ToastModule,\r\n       MatInputModule, MatNativeDateModule, MatCardModule, MatSelectModule, MatSidenavModule, MatTableModule, MatSortModule, MatPaginatorModule,MatDatepickerModule, MatCheckboxModule, MatRadioModule,\r\n    ],\r\n\texports: [ RouterModule ],\r\n\tdeclarations: [\r\n\t\tConfigureSalesComponent \r\n//\t\t,SmartSearchComponent\r\n    ],\r\n})\r\nexport class ConfigureSalesModule {}\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/sales/configure-sales/config-sales.module.ts"],"sourceRoot":"webpack:///"}