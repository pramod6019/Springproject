{"version":3,"sources":["d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/email/executive-email/executive-email.component.html","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/email/executive-email/executive-email.component.ts","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/email/executive-email/executive-email.module.ts"],"names":[],"mappings":"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","file":"executive-email.module.chunk.js","sourcesContent":["module.exports = \"\\t<toast></toast>\\r\\n\\t\\r\\n    <div class=\\\"m-subheader mr-auto\\\" >\\r\\n        <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n\\t\\t\\t\\tUpdate Email Settings\\r\\n\\t\\t\\t</h3>\\r\\n         <ul class=\\\"m-subheader__breadcrumbs m-nav m-nav--inline\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tHome\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/email\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEmail\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/email-list\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tEmail List:\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\t\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__head col-md-12 btn-row\\\" >\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head-caption\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t<h2 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\t\\tUpdate Email Settings\\r\\n\\t\\t\\t\\t\\t</h2>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t<form (ngSubmit)=\\\"onSubmit()\\\" class=\\\"m-form m-form--fit m-form--label-align-right\\\"\\tid=\\\"m_form_1\\\"  [formGroup]=\\\"emailForm\\\">\\r\\n\\t\\t\\t<div class=\\\"m-portlet__body row\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class='col-md-6'>\\r\\n\\t\\t\\t\\t\\t<mat-form-field >\\r\\n\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email Server*\\\" [(ngModel)]=\\\"email.empEmailServer\\\" formControlName=\\\"empEmailServer\\\" maxlength=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t <mat-error *ngIf=\\\"empEmailServer.hasError('required')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tEnter Email server\\r\\n\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class='col-md-6'>\\r\\n\\t\\t\\t\\t\\t<mat-form-field >\\r\\n\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email Username*\\\" [(ngModel)]=\\\"email.empEmailUsername\\\" formControlName=\\\"empEmailUsername\\\" maxlength=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t <mat-error *ngIf=\\\"empEmailUsername.hasError('required')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tEnter Email Username\\r\\n\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class='col-md-6'>\\r\\n\\t\\t\\t\\t\\t<mat-form-field >\\r\\n\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Email Password*\\\" [(ngModel)]=\\\"email.empEmailPassword\\\" formControlName=\\\"empEmailPassword\\\" maxlength=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t <mat-error *ngIf=\\\"empEmailPassword.hasError('required')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tEnter Email Password\\r\\n\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class='col-md-6'>\\r\\n\\t\\t\\t\\t\\t<mat-form-field >\\r\\n\\t\\t\\t\\t\\t\\t<input matInput placeholder=\\\"Port*\\\" [(ngModel)]=\\\"email.empEmailPort\\\" formControlName=\\\"empEmailPort\\\" maxlength=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t <mat-error *ngIf=\\\"empEmailPort.hasError('required')\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tEnter Port\\r\\n\\t\\t\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-6\\\" style=\\\"margin-top: 2em;\\\">\\r\\n\\t\\t\\t\\t\\t<label>SSL:</label>\\r\\n\\t\\t\\t\\t\\t<mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(email.empEmailSsl)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:email, objKey:'empEmailSsl'})\\\" formControlName=\\\"empEmailSsl\\\"></mat-checkbox>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-12 btn-row\\\">\\r\\n\\t\\t\\t\\t\\t <button mat-button [disabled]=\\\"false\\\" class=\\\"btn btn-primary\\\"> Update </button> \\r\\n\\t\\t\\t\\t\\t <button mat-button class=\\\"btn btn-primary\\\" routerLink=\\\"/portal/executive-list\\\" id=\\\"reset\\\" type=\\\"button\\\"> Cancel </button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</form>\\t\\r\\n\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/email/executive-email/executive-email.component.html\n// module id = ../../../../../src/app/theme/pages/portal/email/executive-email/executive-email.component.html\n// module chunks = executive-email.module","import { Component, OnInit, ViewEncapsulation, AfterViewInit, ElementRef, ViewChild, HostBinding} from '@angular/core';\r\nimport { ROUND_ANTICLOCK_ANIMATION }   from '../../../../../animations/round-anticlock.animation';\r\nimport { FLY_IN_OUT_ANIMATION }   from '../../../../../animations/fly-in-out.animation';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { MatInputModule, MatNativeDateModule, MatSelectModule, MatSort, PageEvent} from '@angular/material';\r\nimport { Router, Event, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {ListComponent, SafeHtmlPipe} from '../../../list/list.component'\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { FormControl, Validators, FormGroup, ValidationErrors } from '@angular/forms';\r\nimport { ToastComponent } from '../../../../layouts/toast-notification/toast.component';\r\nimport { GlobalValidate } from '../../../../../_services/validate.service';\r\n\r\nimport 'rxjs/add/operator/filter' ;\r\n\r\nconst EMAIL_REGEX=/^[a-zA-Z0-9.!#$%'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n@Component({\r\n    selector: \".m-grid__item.m-grid__item--fluid.m-wrapper\",\r\n    templateUrl: \"./executive-email.component.html\",\r\n    encapsulation: ViewEncapsulation.None,\r\n\tanimations: [ \r\n    \tFLY_IN_OUT_ANIMATION,\r\n\t\tROUND_ANTICLOCK_ANIMATION\r\n  ],\r\n})\r\n\r\nexport class ExecutiveEmailComponent    {\r\n    @HostBinding('@flyInOutTrigger') flyInOutTrigger = 'in';\r\n\t@ViewChild(ToastComponent) toast: ToastComponent;\r\n\t  \r\n\temail = new emailData();\r\n\temailForm: FormGroup;  \r\n\temailId = 0;\r\n\t \r\n\tstatus:string;\r\n\tmsg = []; \r\n\terrorMsg;\r\n\tbootstrapFormValues = [];\r\n\t \r\n\tconstructor(private http: HttpClient, private router:Router, private route:ActivatedRoute, private globalValid: GlobalValidate) { \r\n\t\tthis.route.queryParams.filter(params => params.empId).subscribe(params=>{\r\n\t\t\tif(params.empId != undefined){\r\n\t\t\t\tthis.emailId = params.empId; \r\n\t\t\t\t}\r\n\t\t}); \r\n\t\r\n\t\tif(this.emailId != 0){\r\n\t\t\tthis.status=\"Update\";\r\n\t\t\tthis.populateData();\r\n\t\t}\r\n\t}\r\n\t \r\n\tngAfterViewInit(){\r\n\t  }\r\n \r\n \t toggleAnimation(){\r\n\t\t\tthis.router.navigate(['portal/email-list']);\r\n\t\t }\r\n\t\r\n\t getCheckValues(temp:string){\r\n\t\treturn this.globalValid.getCheckValue(temp);\r\n\t }\r\n\t \r\n\tngOnInit() {\r\n\t\t\r\n\t\tthis.emailForm = new FormGroup({\t\t\r\n\t\t\t'empEmailServer' : new FormControl('', [ Validators.required ] ),\r\n\t\t\t'empEmailUsername' : new FormControl('', [ Validators.required] ),\r\n\t\t\t'empEmailPassword' : new FormControl('', [ Validators.required ] ),\r\n\t\t\t'empEmailPort' : new FormControl('', [ Validators.required] ),\r\n\t\t\t'empEmailSsl' : new FormControl('', [ Validators.required] ),\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t  \r\n\t  get empEmailServer(){ return this.emailForm.get('empEmailServer')};\r\n\t  get empEmailUsername(){ return this.emailForm.get('empEmailUsername')};\r\n\t  get empEmailPassword(){ return this.emailForm.get('empEmailPassword')};\r\n\t  get empEmailPort(){ return this.emailForm.get('empEmailPort')};\r\n\t  get empEmailSsl(){ return this.emailForm.get('empEmailSsl')};\r\n\t \r\n\t \r\n\t  populateData(){\r\n\t\tconst headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\t\t\r\n\t\t this.http.post(sessionStorage.getItem('requestUrl')+'/axelacrm/portal/email-data',\r\n\t\t\t\t\t\t\t\t\tJSON.stringify({ emailId :this.emailId,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   \trequestType : \"update\" }),\r\n\t\t{ headers, withCredentials: true }).subscribe(\r\n\t\t\t\t\t\t\tdata => {\r\n\t\t\t\t\t\t\t\t\t\tthis.email = data['populateData'][0];\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t(err) => {\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"ERROR: \"+err);\r\n\t\t\t\t\t\t\t\t\t },\r\n\t\t\t\t\t\t\t () => {\r\n\t\t\t\t\t\t\t\t\t\t//this.populateDropDownData();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t}\r\n\r\n\t \tonSubmit() {\r\n\t\r\n\t\t\tconsole.log(this.email);\r\n\t\t\t\r\n\t\t if(!this.emailForm.invalid){ \r\n\tconsole.log(\"valid\");\r\n\t\tconst headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\t\tif(this.emailId == 0){\r\n\t\t\tthis.email['requestType'] = 'add';\r\n\t\t}else{\r\n\t\t\tthis.email['requestType'] = 'update';\r\n\t\t\tthis.email['emailId'] = this.emailId+'';\r\n\t\t}\r\n\t\t this.http.post(sessionStorage.getItem('requestUrl')+'/axelacrm/portal/email',\r\n\t\t\t\t\t\t\t\t\tJSON.stringify(this.email),\r\n\t\t\t\t\t\t{ headers, withCredentials: true }).subscribe(data => {\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'] == undefined){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['errormsg'];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'].includes('Successfully')){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='success';\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['successmsg'];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t  \t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n\t\t\t  \t\t\t\t\t\t\t\t\t\t\tif(this.msg[0]!='Error'){\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.emailForm.reset();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.toggleAnimation();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terr =>{\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=err['error'];\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n\t\t \t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t  }\r\n\t  }\r\n}\r\n\r\n\r\n\r\nexport class emailData\r\n{\r\n\tempEmailServer: string;\r\n\tempEmailUsername: string;\r\n\tempEmailPassword: string;\r\n\tempEmailPort: string;\r\n\tempEmailSsl: string;\r\n\tempModifiedId: string;\r\n\tempModifiedDate: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/email/executive-email/executive-email.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ExecutiveEmailComponent } from './executive-email.component';\r\nimport { LayoutModule } from '../../../../layouts/layout.module';\r\nimport { DefaultComponent } from '../../../default.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {FormControl, Validators, FormGroup} from '@angular/forms'; \r\nimport {ListModule} from '../../../list/list.module'\r\nimport {ToastModule} from '../../../../layouts/toast-notification/toast.module';\r\nimport {\r\n\t  MatAutocompleteModule,\r\n\t  MatButtonModule, \r\n\t  MatButtonToggleModule,\r\n\t  MatCardModule,\r\n\t  MatCheckboxModule,\r\n\t  MatChipsModule,\r\n\t  MatDatepickerModule,\r\n\t  MatDialogModule,\r\n\t  MatExpansionModule,\r\n\t  MatGridListModule,\r\n\t  MatIconModule,\r\n\t  MatInputModule,\r\n\t  MatListModule,\r\n\t  MatMenuModule,\r\n\t  MatNativeDateModule,\r\n\t  MatPaginatorModule,\r\n\t  MatProgressBarModule,\r\n\t  MatProgressSpinnerModule,\r\n\t  MatRadioModule,\r\n\t  MatRippleModule,\r\n\t  MatSelectModule,\r\n\t  MatSidenavModule,\r\n\t  MatSliderModule,\r\n\t  MatSlideToggleModule,\r\n\t  MatSnackBarModule,\r\n\t  MatSortModule,\r\n\t  MatTableModule,\r\n\t  MatTabsModule,\r\n\t  MatToolbarModule,\r\n\t  MatTooltipModule,\r\n\t  MatStepperModule,\r\n\t} from '@angular/material';\r\n\t\r\nconst routes: Routes = [\r\n    {\r\n        \"path\": \"\",\r\n        \"component\": DefaultComponent,\r\n        \"children\": [\r\n            {\r\n                \"path\": \"\",\r\n                \"component\": \r\n\t\t\t\tExecutiveEmailComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, RouterModule.forChild(routes), LayoutModule, HttpClientModule,\r\n        FormsModule, ReactiveFormsModule, ListModule, ToastModule, MatCheckboxModule, MatRadioModule,\r\n       MatInputModule, MatNativeDateModule, MatCardModule, MatSelectModule, MatSidenavModule, MatTableModule, MatSortModule, MatPaginatorModule,MatDatepickerModule,  \r\n    ], exports: [\r\n        RouterModule\r\n    ], declarations: [ ExecutiveEmailComponent ],\r\n})\r\nexport class ExecutiveEmailModule  {\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/email/executive-email/executive-email.module.ts"],"sourceRoot":"webpack:///"}