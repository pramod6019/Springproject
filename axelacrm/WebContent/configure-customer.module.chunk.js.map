{"version":3,"sources":["d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/customer/configure-customer/configure-customer.component.html","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/customer/configure-customer/configure-customer.component.ts","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/customer/configure-customer/configure-customer.module.ts"],"names":[],"mappings":"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","file":"configure-customer.module.chunk.js","sourcesContent":["module.exports = \" \\t<toast></toast>\\r\\n\\t\\t\\r\\n\\t<div class=\\\"m-subheader\\\">\\t\\t\\t\\r\\n\\t\\t\\t<div class=\\\"mr-auto\\\">\\r\\n\\t\\t\\t<h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n\\t\\t\\t\\tConfigure Customer\\r\\n\\t\\t\\t</h3>\\r\\n\\t\\t\\t<ul class=\\\"m-subheader__breadcrumbs m-nav m-nav--inline\\\">\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/home\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tHome\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/manager\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tBusiness Manager\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/configure-customer\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tConfigure Customer:\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\r\\n\\t<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__head col-md-12 btn-row\\\" >\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head-caption\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t<h2 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\t\\tConfigure Customer\\r\\n\\t\\t\\t\\t\\t</h2>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\t\\r\\n\\t\\t\\r\\n\\t\\t<form (ngSubmit)=\\\"onSubmit()\\\" class=\\\"m-form m-form--fit m-form--label-align-right\\\" [formGroup]=\\\"configcustomerForm\\\" id=\\\"m_form_1\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__body row\\\">\\r\\n\\t\\t\\r\\n\\t\\t<div class='col-md-4'></div>\\r\\n\\t\\t<div class='col-md-4' style=\\\"padding: .5em;\\\"> Enable Source of Enquiry:  \\r\\n            <mat-checkbox  [ngModel]=\\\"globalValid.getCheckValue(configCustomer.configCustomerSoe)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configCustomer, objKey:'configCustomerSoe'})\\\" formControlName=\\\"configCustomerSoe\\\"  ></mat-checkbox>\\r\\n        </div>\\r\\n        <div class='col-md-3'></div>\\r\\n        \\r\\n        <div class='col-md-4'></div>\\r\\n\\t\\t <div class='col-md-4' style=\\\"padding: .5em;\\\"> Enable Source of Business:  \\r\\n            <mat-checkbox  [ngModel]=\\\"globalValid.getCheckValue(configCustomer.configCustomerSob)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configCustomer, objKey:'configCustomerSob'})\\\" formControlName=\\\"configCustomerSob\\\"  ></mat-checkbox>\\r\\n        </div>\\r\\n        <div class='col-md-3'></div>\\r\\n        \\r\\n        <div class='col-md-4'></div>\\r\\n        <div class='col-md-4' style=\\\"padding: .5em;\\\"> Address is Mandatory:  \\r\\n            <mat-checkbox  [ngModel]=\\\"globalValid.getCheckValue(configCustomer.configCustomerAddress)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configCustomer, objKey:'configCustomerAddress'})\\\" formControlName=\\\"configCustomerAddress\\\"  ></mat-checkbox>\\r\\n        </div>\\r\\n        <div class='col-md-3'></div>\\r\\n        \\r\\n        <div class='col-md-4'></div>\\r\\n\\t\\t <div class='col-md-4' style=\\\"padding: .5em;\\\"> Allow Duplicate Names:  \\r\\n            <mat-checkbox  [ngModel]=\\\"globalValid.getCheckValue(configCustomer.configCustomerDupNames)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configCustomer, objKey:'configCustomerDupNames'})\\\" formControlName=\\\"configCustomerDupNames\\\"  ></mat-checkbox>\\r\\n        </div>\\r\\n        <div class='col-md-3'></div>\\r\\n        \\r\\n        <div class='col-md-4'></div>\\r\\n\\t\\t <div class=\\\"col-md-6\\\">\\r\\n\\t\\t\\t <mat-form-field >\\r\\n\\t\\t\\t\\t<input matInput placeholder=\\\"Customer Name\\\" [(ngModel)]=\\\"configCustomer.configCustomerName\\\" formControlName=\\\"configCustomerName\\\" required>\\r\\n\\t\\t\\t\\t<mat-error *ngIf=\\\"configCustomerName.hasError('required')\\\">\\r\\n\\t\\t\\t\\t\\t\\tEnter Admin Email-Id\\r\\n\\t\\t\\t\\t</mat-error>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t<div class=\\\"col-md-12  btn-row\\\" > \\r\\n\\t\\t\\t \\t<button mat-button [disabled]=\\\"false\\\" class=\\\"btn btn-primary\\\"> Update </button>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n\\t\\t</div>\\r\\n\\t</form>\\t\\r\\n\\r\\n\\t</div>\\r\\n\\t\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/customer/configure-customer/configure-customer.component.html\n// module id = ../../../../../src/app/theme/pages/portal/manager/customer/configure-customer/configure-customer.component.html\n// module chunks = configure-customer.module","import { Component, OnInit, ViewEncapsulation, AfterViewInit, ElementRef, ViewChild, HostBinding} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {FormControl, Validators, FormGroup, ValidationErrors} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Helpers } from '../../../../../../helpers';\r\nimport { ScriptLoaderService } from '../../../../../../_services/script-loader.service';\r\nimport { FLY_IN_OUT_ANIMATION }   from '../../../../../../animations/fly-in-out.animation';\r\nimport { ROUND_ANTICLOCK_ANIMATION }   from '../../../../../../animations/round-anticlock.animation';\r\nimport { Router, Event, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { ToastComponent } from '../../../../../layouts/toast-notification/toast.component';\r\nimport { GlobalValidate } from '../../../../../../_services/validate.service';\r\n\r\n@Component({\r\n    selector: \".m-grid__item.m-grid__item--fluid.m-wrapper\",\r\n    templateUrl: \"./configure-customer.component.html\",\r\n    encapsulation: ViewEncapsulation.None,\r\n\tanimations: [ \r\n    \tFLY_IN_OUT_ANIMATION,\r\n\t\tROUND_ANTICLOCK_ANIMATION\r\n  ],\r\n})\r\n\r\nexport class ConfigCustomerComponent  {\r\n@HostBinding('@flyInOutTrigger') flyInOutTrigger = 'in';\r\n\t@ViewChild(ToastComponent) toast: ToastComponent;\r\n \r\nconfigcustomerForm: FormGroup;\r\nconfigCustomer= new ConfigCustomerData();\r\nconfigId='1';\r\n \r\npublic status =\"\";\r\nmsg = [];\r\n\t \r\nbootstrapFromValues = [];\r\n\r\nconstructor( private http: HttpClient, private _router: Router, private globalValid: GlobalValidate ) {\r\n\t\tthis.status = \"Update\";\r\n\t\tthis.populateData();\r\n\t}\r\n\t\r\n    ngOnInit() {\r\n\t\tthis.configcustomerForm = new FormGroup({\t\t\t\r\n\t\t\t 'configCustomerSoe' : new FormControl(''),\r\n\t\t\t 'configCustomerSob' : new FormControl(''),\r\n\t\t\t 'configCustomerAddress' : new FormControl(''),\r\n\t\t\t 'configCustomerDupNames' : new FormControl(''),\r\n\t\t\t 'configCustomerName' : new FormControl(''),\r\n\t\t});\r\n\t}\r\n\t  \r\n\t   \tget configCustomerSoe(){ return this.configcustomerForm.get('configCustomerSoe')};\r\n\t \tget configCustomerSob(){ return this.configcustomerForm.get('configCustomerSob')};\r\n\t    get configCustomerAddress(){ return this.configcustomerForm.get('configCustomerAddress')};\r\n\t    get configCustomerDupNames(){ return this.configcustomerForm.get('configCustomerDupNames')};\r\n\t    get configCustomerName(){ return this.configcustomerForm.get('configCustomerName')};\r\n\t \r\n\r\n\t populateData(){\r\n\t\t\t  \tconst headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\t\t\t    this.http.post<ConfigCustomerData>(sessionStorage.getItem('requestUrl')+'/axelacrm/customer-populate/configdetails',\r\n\t\t\t\t\t\t\t\t\t{ headers, withCredentials: true }).subscribe(data =>{\r\n\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.configCustomer = data['populateconfigdetails'][0];\r\n\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t (err) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"ERROR: \"+err);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t });\r\n\t }\r\n\t \r\n\t   ngAfterViewInit(){ }\t\r\n\t\r\n \r\n\t\t toggleAnimation(){\r\n\t\t\tthis._router.navigate(['portal/manager']);      \r\n\t\t }\r\n\r\n \r\n \t\tgetCheckValues(temp:string){\r\n\t\t\treturn this.globalValid.getCheckValue(temp);\r\n\t\t}\r\n \r\n\t  \tonSubmit() {\r\n\t\t\tthis.bootstrapFromValues = $('#m_form_1').serializeArray();\r\n\t\t\tfor(var i=0;i<this.bootstrapFromValues.length;i++){\r\n\t\t\t\tthis.configCustomer[this.bootstrapFromValues[i].name]=this.bootstrapFromValues[i].value;\r\n\t\t\t}\r\n\t\t\tif(!this.configcustomerForm.invalid){\r\n\t\t\t\t  const headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\r\n\t\t\t\tthis.configCustomer['requestType'] = 'update';\r\n\t\t\t\tthis.configCustomer['configId'] = this.configId+'';\r\n\r\n\t\t\t\tthis.http.post(sessionStorage.getItem('requestUrl')+'/axelacrm/portal/config-customer',\r\n\t\t\t\t\t\t\t\t\tJSON.stringify(this.configCustomer),\r\n\t\t\t\t\t\t{ headers, withCredentials: true }).subscribe(data => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'] == undefined){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['errormsg'];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'].includes('Successfully')){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='success';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['successmsg'];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(this.msg[0]!='Error'){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.configcustomerForm.reset();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.toggleAnimation();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terr =>{\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=err['error'];\r\n\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n\t\t \t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t  } \r\n\t\t\tconsole.log(this.configCustomer);\r\n\t  }\r\n \r\n\t\r\n}\r\n\r\n\t\r\n\t\r\nexport class ConfigCustomerData {\r\n\t configcustomerId: string;\r\n}\r\n\r\nexport class ConfigDetails {\r\n\tconfigCustomerSob:string;\r\n\tconfigCustomerSoe:string;\r\n\tconfigCustomerAddress:string;\r\n\tconfigCustomerDupNames:string;\r\n    configCustomerName:string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/customer/configure-customer/configure-customer.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LayoutModule } from '../../../../../layouts/layout.module';\r\nimport { DefaultComponent } from '../../../../default.component';\r\nimport { ConfigCustomerComponent } from './configure-customer.component';\r\nimport {ToastModule} from '../../../../../layouts/toast-notification/toast.module';\r\n\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\r\nimport {\r\n\t  MatAutocompleteModule,\r\n\t  MatButtonModule,\r\n\t  MatButtonToggleModule,\r\n\t  MatCardModule,\r\n\t  MatCheckboxModule,\r\n\t  MatChipsModule,\r\n\t  MatDatepickerModule,\r\n\t  MatDialogModule,\r\n\t  MatExpansionModule,\r\n\t  MatGridListModule,\r\n\t  MatIconModule,\r\n\t  MatInputModule,\r\n\t  MatListModule,\r\n\t  MatMenuModule,\r\n\t  MatNativeDateModule,\r\n\t  MatPaginatorModule,\r\n\t  MatProgressBarModule,\r\n\t  MatProgressSpinnerModule,\r\n\t  MatRadioModule,\r\n\t  MatRippleModule,\r\n\t  MatSelectModule,\r\n\t  MatSidenavModule,\r\n\t  MatSliderModule,\r\n\t  MatSlideToggleModule,\r\n\t  MatSnackBarModule,\r\n\t  MatSortModule,\r\n\t  MatTableModule,\r\n\t  MatTabsModule,\r\n\t  MatToolbarModule,\r\n\t  MatTooltipModule,\r\n\t  MatStepperModule,\r\n\t} from '@angular/material';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        \"path\": \"\",\r\n        \"component\": DefaultComponent,\r\n        \"children\": [\r\n            {\r\n                \"path\": \"\",\r\n                \"component\": ConfigCustomerComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, RouterModule.forChild(routes), LayoutModule, MatCardModule, MatExpansionModule, FormsModule, ReactiveFormsModule,ToastModule,\r\n       MatInputModule, MatNativeDateModule, MatSelectModule, MatSidenavModule, \r\n\t\tMatTableModule, MatSortModule, MatPaginatorModule,MatDatepickerModule, MatCheckboxModule, MatRadioModule,\r\n    ],\r\n\texports: [ RouterModule ],\r\n\tdeclarations: [ ConfigCustomerComponent ]\r\n})\r\n\r\nexport class ConfigCustomerModule {}\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/customer/configure-customer/configure-customer.module.ts"],"sourceRoot":"webpack:///"}