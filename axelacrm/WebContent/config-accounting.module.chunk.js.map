{"version":3,"sources":["d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/accounting/configure-accounting/config-accounting.component.html","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/accounting/configure-accounting/config-accounting.component.ts","d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/accounting/configure-accounting/config-accounting.module.ts"],"names":[],"mappings":"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","file":"config-accounting.module.chunk.js","sourcesContent":["module.exports = \"\\t<toast></toast>\\r\\n\\t\\r\\n    <div class=\\\"m-subheader mr-auto\\\" >\\r\\n        <h3 class=\\\"m-subheader__title m-subheader__title--separator\\\">\\r\\n\\t\\t\\t\\tConfigure Accounting\\r\\n\\t\\t\\t</h3>\\r\\n         <ul class=\\\"m-subheader__breadcrumbs m-nav m-nav--inline\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tHome\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/manager\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tBusiness Manager\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__separator\\\">\\r\\n\\t\\t\\t\\t\\t>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"m-nav__item\\\">\\r\\n\\t\\t\\t\\t\\t<a routerLink=\\\"/portal/configure-accounting\\\" class=\\\"m-nav__link\\\">\\r\\n\\t\\t\\t\\t\\t\\t<span class=\\\"m-nav__link-text\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\tConfigure Accounting:\\r\\n\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t</a>\\t\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t<div class=\\\"m-portlet m-portlet--mobile\\\">\\r\\n\\t\\t<div class=\\\"m-portlet__head col-md-12 btn-row\\\" >\\r\\n\\t\\t\\t<div class=\\\"m-portlet__head-caption\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"m-portlet__head-title\\\">\\r\\n\\t\\t\\t\\t\\t<h2 class=\\\"m-portlet__head-text\\\">\\r\\n\\t\\t\\t\\t\\t\\tConfigure Accounting\\r\\n\\t\\t\\t\\t\\t</h2>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t\\t\\r\\n    \\t<form (ngSubmit)=\\\"onSubmit()\\\" class=\\\"m-form m-form--fit m-form--label-align-right\\\"\\tid=\\\"m_form_1\\\"    [formGroup]=\\\"configureAccountingForm\\\">\\r\\n     <!--<div class=\\\"m-portlet__body\\\">\\r\\n       <table class=\\\"container\\\">\\r\\n        \\r\\n\\t\\t <tbody>\\r\\n\\t\\t\\t<tr>\\r\\n\\t\\t\\t   <td>\\r\\n\\t\\t\\t\\t   <label>Enable opportunity</label> \\r\\n\\t\\t\\t\\t   <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesOppr)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesOppr'})\\\" formControlName=\\\"configSalesOppr\\\"></mat-checkbox>\\t\\r\\n\\t\\t\\t\\t </td>\\r\\n\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t   <label>Sales Order Ref No.:</label> \\r\\n\\t\\t\\t\\t   <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesSoRefno)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesSoRefno'})\\\" formControlName=\\\"configSalesSoRefno\\\"></mat-checkbox>\\r\\n\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t   <td>\\r\\n\\t\\t\\t\\t  <label>Enable source of Enquiry:</label> \\r\\n\\t\\t\\t\\t  <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesSoe)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesSoe'})\\\" formControlName=\\\"configSalesSoe\\\"></mat-checkbox>\\t\\r\\n\\t\\t\\t   </td>\\r\\n\\t\\t\\t  </tr>\\r\\n\\t\\t\\t  <tr>\\r\\n\\t\\t\\t\\t<td>\\r\\n\\t\\t\\t\\t  <label>Enable Source of Bussiness:</label> \\r\\n\\t\\t\\t\\t  <mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSalesSob)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSalesSob'})\\\" formControlName=\\\"configSalesSob\\\"></mat-checkbox>\\t\\r\\n\\t\\t\\t   </td>\\r\\n\\t\\t\\t  </tr>\\r\\n\\t\\t </tbody>\\r\\n  </table>  \\r\\n         \\r\\n      <div class =\\\"row\\\">\\r\\n       <div class='col-md-6'>\\r\\n            <mat-form-field>\\r\\n            <input required matInput placeholder=\\\"Opportunity Name\\\"  [(ngModel)]=\\\"configuresales.configSalesOpprName\\\" formControlName=\\\"configSalesOpprName\\\" maxlength=\\\"255\\\">\\r\\n             <mat-error *ngIf=\\\"configSalesOpprName.hasError('required')\\\"> Enter Opportunity Name </mat-error>\\r\\n           </mat-form-field>\\r\\n\\t\\t</div>\\r\\n      \\r\\n      \\r\\n      <div class='col-md-6'>\\r\\n          <mat-form-field>\\r\\n            <input  matInput placeholder=\\\"Enquiry Domain\\\"  [(ngModel)]=\\\"configuresales.configSalesEnquiryDomain\\\" formControlName=\\\"configSalesEnquiryDomain\\\" maxlength=\\\"255\\\">\\r\\n          </mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n      \\r\\n      <div class =\\\"row\\\">\\r\\n       <div class='col-md-6'>\\r\\n          <mat-form-field>\\r\\n            <input required matInput placeholder=\\\"Quote Prefix\\\"  [(ngModel)]=\\\"configuresales.configQuotePrefix\\\" formControlName=\\\"configQuotePrefix\\\" maxlength=\\\"255\\\">\\r\\n             <mat-error *ngIf=\\\"configQuotePrefix.hasError('required')\\\"> Enter Quote Prefix </mat-error>\\r\\n          </mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t \\r\\n        <div class='col-md-6'>\\r\\n          <mat-form-field>\\r\\n            <input required matInput placeholder=\\\"SO Prefix\\\"  [(ngModel)]=\\\"configuresales.configSoPrefix\\\" formControlName=\\\"configSoPrefix\\\" maxlength=\\\"255\\\">\\r\\n             <mat-error *ngIf=\\\"configSoPrefix.hasError('required')\\\"> Enter SO Prefix </mat-error>\\r\\n          </mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n        \\r\\n        <div class =\\\"row\\\">\\r\\n         <div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea matInput placeholder=\\\"Quote Description\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configQuoteDesc\\\" formControlName=\\\"configQuoteDesc\\\"    maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t   <mat-error *ngIf=\\\"configQuoteDesc.hasError('required')\\\"> Enter Script </mat-error>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t </div>\\r\\n     \\r\\n       <div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea   matInput placeholder=\\\"Quote Terms & Conditions:\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configQuoteTerms\\\" formControlName=\\\"configQuoteTerms\\\"  maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n     </div>\\r\\n     \\r\\n      <div class =\\\"row\\\">\\r\\n      <div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea  matInput placeholder=\\\"Sales Order Description:\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configSoDesc\\\" formControlName=\\\"configSoDesc\\\"    maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n      \\r\\n       \\t<div class='col-md-6'>\\r\\n\\t\\t   <mat-form-field>\\r\\n\\t\\t\\t <textarea  matInput placeholder=\\\"Sales Order Terms & Conditions:\\\"  matAutosizeMinRows=\\\"2\\\" [(ngModel)]=\\\"configuresales.configSoTerms\\\" formControlName=\\\"configSoTerms\\\"    maxlength=\\\"255\\\">\\t\\t\\r\\n    \\t\\t </textarea>\\r\\n\\t\\t   <mat-hint>(2000 Characters)</mat-hint>\\r\\n\\t\\t   <mat-error *ngIf=\\\"configSoTerms.hasError('required')\\\"> Enter Script </mat-error>\\r\\n\\t\\t\\t</mat-form-field>\\r\\n\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n       <br>\\r\\n       \\r\\n       <h4 align =\\\"center\\\">Automated Tasks:</h4>\\r\\n       <table class=\\\"table table-hover table-bordered\\\" style=\\\"width:80%\\\" align=\\\"center\\\">\\r\\n        <thead class =\\\"bg-primary\\\">\\r\\n\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t<th>Task Type</th>\\r\\n\\t\\t\\t\\t\\t<th>Send Email</th>\\r\\n\\t\\t\\t\\t\\t<th>Format Email</th>\\r\\n\\t\\t\\t\\t\\t<th>Send SMS</th>\\r\\n\\t\\t\\t\\t\\t<th>Format SMS</th>\\r\\n\\t\\t\\t\\t</tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n        <tr>\\r\\n            <td align=\\\"left\\\">Sales Order:</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"><mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSoEmailEnable)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSoEmailEnable'})\\\" formControlName=\\\"configSoEmailEnable\\\"></mat-checkbox></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"><mat-checkbox [ngModel]=\\\"globalValid.getCheckValue(configuresales.configSoSmsEnable)\\\" (change)=\\\"globalValid.fetchCheckValue({event:$event, obj:configuresales, objKey:'configSoSmsEnable'})\\\" formControlName=\\\"configSoSmsEnable\\\"></mat-checkbox></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\r\\n\\t\\t  </tr>\\r\\n\\t\\t<tr>\\r\\n\\t\\t\\t<td align=\\\"left\\\">Sales Order for Executive:</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\t\\t\\t<td align=\\\"center\\\"></td>\\r\\n\\t\\t\\t<td align=\\\"center\\\">Format</td>\\r\\n\\t\\t</tr>\\r\\n\\t\\t</tbody>\\r\\n\\t  \\t</table>\\r\\n\\t\\t\\r\\n        \\r\\n         <div class=\\\"col-md-12 btn-row\\\">\\r\\n\\t\\t  <button mat-button [disabled]=\\\"false\\\" class=\\\"btn btn-primary\\\"> Update </button> \\r\\n\\t\\t</div>\\r\\n\\t\\t\\t</div>-->\\r\\n    </form>\\r\\n \\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/accounting/configure-accounting/config-accounting.component.html\n// module id = ../../../../../src/app/theme/pages/portal/manager/accounting/configure-accounting/config-accounting.component.html\n// module chunks = config-accounting.module","import { Component, OnInit, ViewEncapsulation, AfterViewInit, ElementRef, ViewChild, HostBinding} from '@angular/core';\r\nimport { Helpers } from '../../../../../../helpers';\r\nimport { ScriptLoaderService } from '../../../../../../_services/script-loader.service';\r\nimport { ROUND_ANTICLOCK_ANIMATION }   from '../../../../../../animations/round-anticlock.animation';\r\nimport { FLY_IN_OUT_ANIMATION }   from '../../../../../../animations/fly-in-out.animation';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { MatInputModule, MatNativeDateModule, MatSelectModule, MatSort, PageEvent} from '@angular/material';\r\nimport { Router, Event, NavigationStart, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {DataSource} from '@angular/cdk/collections';\r\nimport {ListComponent, SafeHtmlPipe} from '../../../../list/list.component'\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport { FormControl, Validators, FormGroup, ValidationErrors } from '@angular/forms';\r\nimport { GlobalValidate } from '../../../../../../_services/validate.service';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/observable/merge'; \r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/observable/fromEvent';\r\nimport 'rxjs/add/operator/filter' ;\r\nimport { ToastComponent } from '../../../../../layouts/toast-notification/toast.component';\r\n\r\n\r\n@Component({\r\n    selector: \".m-grid__item.m-grid__item--fluid.m-wrapper\",\r\n    templateUrl: \"./config-accounting.component.html\",\r\n    encapsulation: ViewEncapsulation.None,\r\n\tanimations: [ \r\n    \tFLY_IN_OUT_ANIMATION,\r\n\t\tROUND_ANTICLOCK_ANIMATION\r\n  ],\r\n})\r\n\r\nexport class ConfigureAccountingComponent    {\r\n    @HostBinding('@flyInOutTrigger') flyInOutTrigger = 'in';\r\n\t@ViewChild(ToastComponent) toast: ToastComponent;\r\n\t\r\n\t configureAccountingForm: FormGroup;\r\n     bootstrapFromValues = [];\r\n\t status;\r\n\t configureAccounting= new configureAccountingData();\r\n\t msg = [];\r\n \r\n   constructor(private globalValid: GlobalValidate, private http: HttpClient, private _router: Router, private route:ActivatedRoute) {\r\n\t   this.status = \"Update\";\r\n//\t\tthis.populateData();\r\n\t  \r\n   }\r\n\t \r\n\t ngOnInit() {\r\n\t\tthis.configureAccountingForm = new FormGroup({\t\r\n\t\t\t//'configAccountingOpprName' : new FormControl('', [ Validators.required]),\r\n\t\t});\r\n\t\t}\r\n\t \r\n//\t   get configAccountingLeads(){ return this.configureAccountingForm.get('configAccountingLeads')};\r\n//\t   get configAccountingOppr(){ return this.configureAccountingForm.get('configAccountingOppr')};\r\n\t  \r\n\t \r\n//\t populateData(){\r\n//\t\t\t  \tconst headers = new HttpHeaders({'Content-Type':'application/json'});\r\n//\t\t\t  this.http.post<configureAccountingData>(sessionStorage.getItem('requestUrl')+'/axelacrm/customer-populate/configure',{},\r\n//\t\t\t\t\t\t\t\t\t{ headers, withCredentials: true }).subscribe(data =>{\r\n//\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.config = data['populateData'][0];\r\n//\t\t\t  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t (err) => {\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"ERROR: \"+err);\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t });\r\n//\t }\r\n\r\n \t\r\n\t getCheckValues(temp:string){\r\n\t\treturn this.globalValid.getCheckValue(temp);\r\n\t }\r\n\t \r\n\t \tonSubmit() {\r\n\t\t\tconsole.log(this.configureAccounting);\r\n\t\t\tthis.bootstrapFromValues = $('#m_form_1').serializeArray();\r\n\t\t\tif(!this.configureAccountingForm.invalid){\r\n\t\t\t  const headers = new HttpHeaders({'Content-Type':'application/json'});\r\n\t\t\t\r\n\t\t\tthis.configureAccounting['requestType'] = 'update';\r\n//\t\t this.http.post(sessionStorage.getItem('requestUrl')+'/axelacrm/accounting/configure',\r\n//\t\t\t\t\t\t\t\t\tJSON.stringify(this.configureAccounting),\r\n//\t\t\t\t\t\t{ headers, withCredentials: true }).subscribe(data => {\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'] == undefined){\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['errormsg'];\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}else{\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(data['successmsg'].includes('Successfully')){\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='success';\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=data['successmsg'];\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n//\t\t\t  \t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n//\t\t\t  \t\t\t\t\t\t\t\t\t\t\tif(this.msg[0]!='Error'){\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\tthis.configureAccountingForm.reset();\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t \r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n//\t\t\t\t\t\t\t\t\t\t\t\t\t\terr =>{\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[0]='Error';\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.msg[1]=err['error'];\r\n//\t\t\t \t\t\t\t\t\t\t\t\t\t\t\tthis.toast.showtoast(this.msg);\r\n//\t\t \t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t  } \r\n\t}\r\n}\r\n\r\nexport class configureAccountingData {\r\n\tconfigReceiptTerms: string;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/accounting/configure-accounting/config-accounting.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ConfigureAccountingComponent } from './config-accounting.component';\r\nimport { LayoutModule } from '../../../../../layouts/layout.module';\r\nimport { DefaultComponent } from '../../../../default.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport { SmartSearchComponent } from '../../../../../layouts/smart-search/smart-search.component';\r\nimport {FormControl, Validators, FormGroup} from '@angular/forms';\r\nimport {ListModule} from '../../../../list/list.module';\r\nimport {ToastModule} from '../../../../../layouts/toast-notification/toast.module';\r\nimport {\r\n\t  MatAutocompleteModule,\r\n\t  MatButtonModule,\r\n\t  MatButtonToggleModule,\r\n\t  MatCardModule,\r\n\t  MatCheckboxModule,\r\n\t  MatChipsModule,\r\n\t  MatDatepickerModule,\r\n\t  MatDialogModule,\r\n\t  MatExpansionModule,\r\n\t  MatGridListModule,\r\n\t  MatIconModule,\r\n\t  MatInputModule,\r\n\t  MatListModule,\r\n\t  MatMenuModule,\r\n\t  MatNativeDateModule,\r\n\t  MatPaginatorModule,\r\n\t  MatProgressBarModule,\r\n\t  MatProgressSpinnerModule,\r\n\t  MatRadioModule,\r\n\t  MatRippleModule,\r\n\t  MatSelectModule,\r\n\t  MatSidenavModule,\r\n\t  MatSliderModule,\r\n\t  MatSlideToggleModule,\r\n\t  MatSnackBarModule,\r\n\t  MatSortModule,\r\n\t  MatTableModule,\r\n\t  MatTabsModule,\r\n\t  MatToolbarModule,\r\n\t  MatTooltipModule,\r\n\t  MatStepperModule,\r\n\t} from '@angular/material';\r\n\t\r\nconst routes: Routes = [\r\n    {\r\n        \"path\": \"\",\r\n        \"component\": DefaultComponent,\r\n        \"children\": [\r\n            {\r\n                \"path\": \"\",\r\n                \"component\": ConfigureAccountingComponent \r\n            }\r\n        ]\r\n    }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        CommonModule, RouterModule.forChild(routes), LayoutModule, HttpClientModule,\r\n        FormsModule, ReactiveFormsModule, ListModule, ToastModule,\r\n       MatInputModule, MatNativeDateModule, MatCardModule, MatSelectModule, MatSidenavModule, MatTableModule, MatSortModule, MatPaginatorModule,MatDatepickerModule, MatCheckboxModule, MatRadioModule,\r\n    ],\r\n\texports: [ RouterModule ],\r\n\tdeclarations: [\r\n\t\tConfigureAccountingComponent \r\n    ],\r\n})\r\nexport class ConfigureAccountingModule {}\n\n\n// WEBPACK FOOTER //\n// d:/exe2/user1/workspace/axelacrm-client/src/app/theme/pages/portal/manager/accounting/configure-accounting/config-accounting.module.ts"],"sourceRoot":"webpack:///"}